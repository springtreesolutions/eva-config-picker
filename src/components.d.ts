/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { BaseEnvironment } from "./components/picker-customers/picker-customers";
export namespace Components {
    interface EvaConfigPicker {
    }
    interface EvaConfigPickerCustomer {
    }
    interface EvaConfigPickerEndpointStatus {
        "endpoint": string;
    }
    interface EvaConfigPickerLogin {
    }
    interface EvaConfigPickerSpinner {
        "size": number;
    }
    interface PickerCustomerLogo {
        "customerName": string;
        "logoPath": string;
    }
}
declare global {
    interface HTMLEvaConfigPickerElement extends Components.EvaConfigPicker, HTMLStencilElement {
    }
    var HTMLEvaConfigPickerElement: {
        prototype: HTMLEvaConfigPickerElement;
        new (): HTMLEvaConfigPickerElement;
    };
    interface HTMLEvaConfigPickerCustomerElement extends Components.EvaConfigPickerCustomer, HTMLStencilElement {
    }
    var HTMLEvaConfigPickerCustomerElement: {
        prototype: HTMLEvaConfigPickerCustomerElement;
        new (): HTMLEvaConfigPickerCustomerElement;
    };
    interface HTMLEvaConfigPickerEndpointStatusElement extends Components.EvaConfigPickerEndpointStatus, HTMLStencilElement {
    }
    var HTMLEvaConfigPickerEndpointStatusElement: {
        prototype: HTMLEvaConfigPickerEndpointStatusElement;
        new (): HTMLEvaConfigPickerEndpointStatusElement;
    };
    interface HTMLEvaConfigPickerLoginElement extends Components.EvaConfigPickerLogin, HTMLStencilElement {
    }
    var HTMLEvaConfigPickerLoginElement: {
        prototype: HTMLEvaConfigPickerLoginElement;
        new (): HTMLEvaConfigPickerLoginElement;
    };
    interface HTMLEvaConfigPickerSpinnerElement extends Components.EvaConfigPickerSpinner, HTMLStencilElement {
    }
    var HTMLEvaConfigPickerSpinnerElement: {
        prototype: HTMLEvaConfigPickerSpinnerElement;
        new (): HTMLEvaConfigPickerSpinnerElement;
    };
    interface HTMLPickerCustomerLogoElement extends Components.PickerCustomerLogo, HTMLStencilElement {
    }
    var HTMLPickerCustomerLogoElement: {
        prototype: HTMLPickerCustomerLogoElement;
        new (): HTMLPickerCustomerLogoElement;
    };
    interface HTMLElementTagNameMap {
        "eva-config-picker": HTMLEvaConfigPickerElement;
        "eva-config-picker-customer": HTMLEvaConfigPickerCustomerElement;
        "eva-config-picker-endpoint-status": HTMLEvaConfigPickerEndpointStatusElement;
        "eva-config-picker-login": HTMLEvaConfigPickerLoginElement;
        "eva-config-picker-spinner": HTMLEvaConfigPickerSpinnerElement;
        "picker-customer-logo": HTMLPickerCustomerLogoElement;
    }
}
declare namespace LocalJSX {
    interface EvaConfigPicker {
    }
    interface EvaConfigPickerCustomer {
        /**
          * This will emit whenever an endpoint is selected
         */
        "onEndPointSelect"?: (event: CustomEvent<BaseEnvironment>) => void;
    }
    interface EvaConfigPickerEndpointStatus {
        "endpoint"?: string;
    }
    interface EvaConfigPickerLogin {
    }
    interface EvaConfigPickerSpinner {
        "size"?: number;
    }
    interface PickerCustomerLogo {
        "customerName"?: string;
        "logoPath"?: string;
    }
    interface IntrinsicElements {
        "eva-config-picker": EvaConfigPicker;
        "eva-config-picker-customer": EvaConfigPickerCustomer;
        "eva-config-picker-endpoint-status": EvaConfigPickerEndpointStatus;
        "eva-config-picker-login": EvaConfigPickerLogin;
        "eva-config-picker-spinner": EvaConfigPickerSpinner;
        "picker-customer-logo": PickerCustomerLogo;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "eva-config-picker": LocalJSX.EvaConfigPicker & JSXBase.HTMLAttributes<HTMLEvaConfigPickerElement>;
            "eva-config-picker-customer": LocalJSX.EvaConfigPickerCustomer & JSXBase.HTMLAttributes<HTMLEvaConfigPickerCustomerElement>;
            "eva-config-picker-endpoint-status": LocalJSX.EvaConfigPickerEndpointStatus & JSXBase.HTMLAttributes<HTMLEvaConfigPickerEndpointStatusElement>;
            "eva-config-picker-login": LocalJSX.EvaConfigPickerLogin & JSXBase.HTMLAttributes<HTMLEvaConfigPickerLoginElement>;
            "eva-config-picker-spinner": LocalJSX.EvaConfigPickerSpinner & JSXBase.HTMLAttributes<HTMLEvaConfigPickerSpinnerElement>;
            "picker-customer-logo": LocalJSX.PickerCustomerLogo & JSXBase.HTMLAttributes<HTMLPickerCustomerLogoElement>;
        }
    }
}
